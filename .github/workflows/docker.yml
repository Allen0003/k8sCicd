name: Build and Push Docker Image + Deploy Frontend

on:
  push:
    branches: [main]

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build backend
        run: mvn clean install
        working-directory: ./backend/k8sCicd

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/k8scicd:latest
          IMAGE_NAME_LOWER=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          docker build -t $IMAGE_NAME_LOWER .
        working-directory: ./backend/k8sCicd

      - name: Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/k8scicd:latest
          IMAGE_NAME_LOWER=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          docker push $IMAGE_NAME_LOWER

      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

      - name: Set up kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Set up KUBECONFIG
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml


  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Build Angular app
        run: npm run build -- --configuration production
        working-directory: ./frontend

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build frontend Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/k8scicd-frontend:latest
          IMAGE_NAME_LOWER=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          docker build -t $IMAGE_NAME_LOWER .
        working-directory: ./frontend

      - name: Push frontend Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/k8scicd-frontend:latest
          IMAGE_NAME_LOWER=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          docker push $IMAGE_NAME_LOWER


      - name: Trigger Render Frontend Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_FRONT_DEPLOY_HOOK_URL }}



